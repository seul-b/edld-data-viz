ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
im <- load.image("data/image.jpg")
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
im <- load.image("data/image.jpg")
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(x = xx, y =yy))  +
stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE) +
scale_fill_gradient (low= "green", high="red") +
geom_point()
ggplot(b, aes(x = xx, y =yy))  +
stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE) +
scale_fill_gradient (low= "green", high="red") +
geom_point()+
background_image(im)
library(ggpubr)
library(ggpubr)
ggplot(b, aes(x = xx, y =yy))  +
stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE) +
scale_fill_gradient (low= "green", high="red") +
geom_point()+
background_image(im)
install.packages("ggpubr")
library(ggpubr)
install.packages("tidyr")
ggplot(b, aes(x = xx, y =yy))  +
stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE) +
scale_fill_gradient (low= "green", high="red") +
geom_point()+
background_image(im)
ggplot(b, aes(x = xx, y =yy))  +
stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE) +
scale_fill_gradient (low= "green", high="red") +
geom_point()+
annotation_raster(im, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1000)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=3000, ymin=0, ymax=1000)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=1200, ymin=0, ymax=1000)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[2]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1000)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1300)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1100)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1050)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
# scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
# scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=2000, ymin=0, ymax=1050)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=1900, ymin=0, ymax=1050)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
im <- load.image("data/image.jpg")
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=1900, ymin=0, ymax=1050)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=1600, ymin=0, ymax=1050)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=0, xmax=1200, ymin=0, ymax=1000)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
ggplot(b, aes(xx,yy))  +
annotation_raster(im, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf)+
stat_density2d(geom = "polygon", aes(fill=..level..)) +
geom_point(size=0.5)+
scale_fill_gradient(low="green",high="red") +
scale_x_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
scale_y_continuous(limits=c(0,dim(im)[1]),expand=c(0,0))+
coord_fixed()
plot(im)
install.packages("devtools")
install.packages("devtools")
```
devtools::install_github("jwdink/eyetrackingR")
devtools::install_github("jwdink/eyetrackingR")
library("eyetrackingR")
library("eyetrackingR")
```
install.packages("zoo")
install.packages("magrittr")
install.packages("magrittr")
library(zoo)
install.packages("gazepath")
library(gazepath)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("jwdink/eyetrackingR")
library("eyetrackingR")
em5 <- read_csv("data/dataset_normalised_5mins/P01_BROWSE.csv")
library(gazepath)
example <- gazepath(em5, x1=x, y1=y, d1=NULL, trial = 3, height_px = screen[,1], height_mm = screen[,2], width_px = screen[,3], width_mm = screen[,4], method = 'gazepath', samplerate = 500)
plot |>
gazepath(em5, x1=x, y1=y, x2 = NULL, y2 = NULL, d1=NULL, d2 = NULL)
devtools::install_github("davebraze/FDBeye")
library("FDBeye")
library("FDBeye")
require("FDBeye")
require("davebraze/FDBeye")
devtools::install_github("davebraze/FDBeye")
1
require("FDBeye")
fixPlot(data, bgImage = NULL, bgAlpha = 0.33,
xyMap = ggplot2::aes_string(x = "xpos", y = "ypos"),
pointMap = ggplot2::aes_string(size = "dur"), pointAlpha = 0.5,
mar = c(0, 0, 0, 0), ..., showPlot = TRUE)
devtools::install_github("davebraze/FDBeye")
gc()
1
install.packages("FDButils")
install_github("davebraze/FDBeye", build_vignettes=TRUE)
install.packages("install_github")
devtools::install_github("davebraze/FDBeye", build_vignettes=TRUE)
install.packages("scanpath")
data(eyemovements)
require(tidyverse)
require(magrittr)
require(scanpath)
data(eyemovements)
install.packages("scanpath")
devtools::install_github("tmalsburg/scanpath")
devtools::install_github("tmalsburg/scanpath")
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
devtools::install_github("tmalsburg/scanpath", dependencies=TRUE)
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
install.packages("Rtools")
View(em5)
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
em5 <- read_csv("data/dataset_normalised_5mins/P01_BROWSE.csv")
require(readr)
em5 <- read_csv("data/dataset_normalised_5mins/P01_BROWSE.csv")
View(em5)
library(tidyverse)
library(magrittr)
library(scanpath)
data(eyemovements)
head(eyemovements)
plot_scanpaths(em5, timestamp ~ x + y | set, participant)
View(em5)
plot_scanpaths(em5, difftime(\n-1, \n, units="seconds") ~ x + y | set, participant)
rows <- nrow(em5)
sec_frame <-em5[-1,] - em5[-rows,]
em5$second <- em5$timestamp
sec_frame <-em5[-1,] - em5[-rows,]
sec_frame <-em5$timestamp[-1,] - em5$timestamp[-rows,]
sec_frame <-em5[-1,] - em5[-rows,]
classs(em5)
class(em5)
str(em5)
em5$x <- as.numeric()
library(tidyverse)
library(magrittr)
library(scanpath)
data(eyemovements)
head(eyemovements)
rows <- nrow(em5)
sec_frame <-em5[-1,] - em5[-rows,]
plot_scanpaths(em5, (em5[-1,] - em5[-rows,] ~ x + y | set, participant)
plot_scanpaths(em5, (em5[-1,] - em5[-rows,]) ~ x + y | set, participant)
em5$diff <- em5$timestamp[2:8104,]
em5$diff <- em5$timestamp[,2:8104]
em5[nrow(em5) + 1,] <- c(NA, NA, NA, NA, NA, NA, 0)
em5[nrow(em5) + 1,] <- list(NA, NA, NA, NA, NA, NA, 0)
em5
em5$diff <- em5$timestamp[,2:8105]
em5$diff <- em5$timestamp[2:8105]
em5$diff <- em5$timestamp[c(2:8105),]
em5$diff <- tail(em5$timestamp, 8104)
em5$diff <- ifelse(tail(em5$timestamp, 8104), NA)
diff <- tail(em5$timestamp, 8104)
diff <- append(diff, NA)
em5$diff <- diff
df = subset(em5, select = -c("second") )
em5 = subset(em5, select = -c("second") )
em5 = subset(em5, select = -c(7))
em5$duration <- em5$diff - em5$timestamp
plot_scanpaths(em5, duration ~ x + y | set, participant)
drop_na(em5)
em5<- drop_na()
em5<- drop_na(em5)
em5 <- read_csv("data/dataset_normalised_5mins/P01_BROWSE.csv")
library(tidyverse)
library(magrittr)
library(scanpath)
data(eyemovements)
head(eyemovements)
rows <- nrow(em5)
sec_frame <-em5[-1,] - em5[-rows,]
library(tidyverse)
library(magrittr)
library(scanpath)
data(eyemovements)
head(eyemovements)
# rows <- nrow(em5)
# sec_frame <-em5[-1,] - em5[-rows,]
diff <- tail(em5$timestamp, 8103)
diff <- append(diff, NA)
em5$diff <- diff
em5$duration <- em5$diff - em5$timestamp
plot_scanpaths(em5, duration ~ x + y | set, participant)
em5[is.na(em5)] <- 0
plot_scanpaths(em5, duration ~ x + y | set, participant)
df <- list.files(path='data/dataset_normalised_5mins/BROWSE') %>%
lapply(read_csv) %>%
bind_rows
df <- list.files(path='/data/dataset_normalised_5mins/BROWSE') %>%
lapply(read_csv) %>%
bind_rows
View(df)
View(df)
do.call("rbind", lst)
do.call("rbind", lst) }
df <- list.files(path='/data/dataset_normalised_5mins/BROWSE',
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
df <- list.files(path="data/dataset_normalised_5mins/BROWSE",
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
View(df)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("jwdink/eyetrackingR")
library("eyetrackingR")
devtools::install_github("davebraze/FDBeye", build_vignettes=TRUE)
library(tidyverse)
library(magrittr)
library(scanpath)
data(eyemovements)
head(eyemovements)
# rows <- nrow(em5)
# sec_frame <-em5[-1,] - em5[-rows,]
diff <- tail(df$timestamp, 214128)
diff <- append(diff, 0)
df$diff <- diff
diff <- tail(df$timestamp, 214127)
diff <- tail(df$timestamp, 214129)
diff <- append(diff, NA)
diff <- tail(df$timestamp, 214129)
diff <- append(diff, 0)
em5$diff <- diff
df$diff <- diff
diff <- tail(df$timestamp, 214129)
diff <- append(diff, 0)
df$diff <- diff
diff <- tail(df$timestamp, 214128)
diff <- append(diff, 0)
df$diff <- diff
diff <- tail(df$timestamp, 214127)
diff <- append(diff, 0)
df$diff <- diff
df$duration <- df$diff - df$timestamp
df[is.na(df)] <- 0
plot_scanpaths(df, duration ~ x + y | set, participant)
plot_scanpaths(df, duration ~ x + y | participant, set)
diff <- tail(df$timestamp, 214127)
diff <- append(diff, NA)
df$diff <- diff
df$duration <- df$diff - df$timestamp
df[is.na(df)] <- 0
plot_scanpaths(df, duration ~ x + y | participant, set)
diff <- tail(df$timestamp, 214127)
diff <- append(diff, NA)
df$diff <- diff
df$duration <- df$diff - df$timestamp
~ x + y | participant, set)
plot_scanpaths(df, duration ~ x + y | participant, set)
drop_na(df)
plot_scanpaths(df, duration ~ x + y | participant, set)
df <- drop_na(df)
plot_scanpaths(df, duration ~ x + y | participant, set)
plot_scanpaths(df, duration ~ x + y | participant, set)
plot_scanpaths(df, duration ~ x + y | participant, set) |>
theme(legend.position="none")
plot_scanpaths(df, duration ~ x + y | participant, set) |>
theme(legend.position="none")
p <- plot_scanpaths(df, duration ~ x + y | participant, set) |>
theme(legend.position="none")
p
p <- plot_scanpaths(df, duration ~ x + y | participant, set)
p + ggplot2::theme(legend.position="none")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages(c("data.table", "dplyr", "eyetrackingR", "fansi", "qs", "readr", "tidyverse", "utf8", "vctrs", "vroom", "xfun", "yaml"))
install.packages(c("data.table", "dplyr", "eyetrackingR", "fansi", "qs", "readr", "tidyverse", "utf8", "vctrs", "vroom", "xfun", "yaml"))
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
update.packages(ask = FALSE)
install.packages("vctrs")
update.packages(ask = FALSE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
require(DT)
require(readr)
# require(tidyverse)
require(data.table)
require(ggplot2)
require(purrr)
require(ggmap)
require(graphics)
require(flexdashboard)
require(shiny)
require(randomForest)
require(tidyverse)
require(mice)
require(DT)
aq <- read_csv("data/AQ_SubScales.csv")
exp1 <- read_csv("data/datadryad_clear98_aq.csv")
exp2 <- read_csv("data/datadryad_movie70_aq.csv")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
diff <- tail(df$timestamp, 214127)
diff <- append(diff, NA)
df$diff <- diff
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
install.packages("scales")
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
install.packages("vctrs")
install.packages("vctrs")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
remove.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
library(tidyverse)
library(magrittr)
library(scanpath)
require(readr)
df <- list.files(path="data/dataset_normalised_5mins/BROWSE",
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
diff <- tail(df$timestamp, 214127)
diff <- append(diff, NA)
df$diff <- diff
df$duration <- df$diff - df$timestamp
df <- drop_na(df)
p <- plot_scanpaths(df, duration ~ x + y | participant, set)
p + ggplot2::theme(legend.position="none")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
require(DT)
require(readr)
require(tidyverse)
require(data.table)
require(ggplot2)
require(purrr)
require(ggmap)
require(graphics)
require(flexdashboard)
require(shiny)
require(randomForest)
require(tidyverse)
require(mice)
require(DT)
require(dplyr)
aq <- read_csv("data/AQ_SubScales.csv")
exp1 <- read_csv("data/datadryad_clear98_aq.csv")
exp2 <- read_csv("data/datadryad_movie70_aq.csv")
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("tmalsburg/scanpath/scanpath", dependencies=TRUE)
library(scanpath)
# library(tidyverse)
library(magrittr)
library(scanpath)
require(readr)
df <- list.files(path="data/dataset_normalised_5mins/BROWSE",
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
diff <- tail(df$timestamp, 214127)
diff <- append(diff, NA)
df$diff <- diff
df$duration <- df$diff - df$timestamp
df <- drop_na(df)
p <- plot_scanpaths(df, duration ~ x + y | participant, set)
p + ggplot2::theme(legend.position="none")
p + ggplot2::theme(legend.position="none")
